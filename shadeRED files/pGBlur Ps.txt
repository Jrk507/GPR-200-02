#version 300 es
//Authors: Jason Kmieciak & Nicholas Sanguine 
#ifdef GL_ES
precision highp float;
#endif //GL_ES

in vec2 vTexcoord;
layout (location = 0) out vec4 rtFragColor;
uniform vec2 uResolution;
uniform sampler2D uTex; // represented by integer (0)
void main()
{
//sampler.uv
// ux = screen location / screen resolution
// 2) (something to do with attribute: texture coordinate)
vec2 uv = vTexcoord;
vec2 texCoordScale = vec2(1.0);
vec2 scalar = vTexcoord + texCoordScale;
//vec2 uv =  gl_FragCoord.xy / uResolution;
//Gauss blur without matrix
vec4 color = texture(uTex, uv) * 41.0;
color += texture(uTex,uv)*41.0;
color += texture(uTex,scalar*vec2(-1,0.0) )*26.0;
color += texture(uTex,scalar*vec2(1,0.0) )*26.0;
color += texture(uTex,scalar*vec2(0.0,-1.0))*26.0;
color += texture(uTex,scalar*vec2(0.0,1.0))*26.0;
color += texture(uTex,scalar*vec2(1.0,1.0))*16.0;
color += texture(uTex,scalar*vec2(-1.0,1.0))*16.0;
color += texture(uTex,scalar*vec2(-1.0,1.0))*16.0;
color += texture(uTex,scalar*vec2(-1.0,-1.0))*16.0;
color += texture(uTex,scalar*vec2(-2,0.0) )*7.0;
color += texture(uTex,scalar*vec2(2,0.0) )*7.0;
color += texture(uTex,scalar*vec2(0.0,-2.0))*7.0;
color += texture(uTex,scalar*vec2(0.0,2.0))*7.0;
color += texture(uTex,scalar*vec2(-1.0,2.0))*4.0;
color += texture(uTex,scalar*vec2(1.0,2.0))*4.0;
color += texture(uTex,scalar*vec2(2.0,1.0))*4.0;
color += texture(uTex,scalar*vec2(2.0,-1.0))*4.0;
color += texture(uTex,scalar*vec2(-1.0,-2.0))*4.0;
color += texture(uTex,scalar*vec2(1.0,-2.0))*4.0;
color += texture(uTex,scalar*vec2(-2.0,1.0))*4.0;
color += texture(uTex,scalar*vec2(-2.0,-1.0))*4.0;
color += texture(uTex,scalar*vec2(2.0,2.0))*1.0;
color += texture(uTex,scalar*vec2(-2.0,2.0))*1.0;
color += texture(uTex,scalar*vec2(-2.0,2.0))*1.0;
color += texture(uTex,scalar*vec2(-2.0,-2.0))*1.0;
color /= 273.0;
rtFragColor = color;
}
