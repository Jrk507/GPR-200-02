#version 300 es
//#version 450

// MAIN DUTY: PROCESS ATTRIBUTES
// e.g. 3D position in space
// e.g. normal
// e.g. 2D uv: texture coordinate
layout (location = 0) in vec4 aPosition;
layout (location = 1) in vec3 aNormal;
//in vec4 aPosition;

// TRANSFORM UNIFORM
uniform mat4 uModelMat;//object space
uniform mat4 uViewMat;//view space
uniform mat4 uProjMat;//clip space
uniform mat4 uViewProjMat;//world space

//VARYING
out vec4 vColor;
out vec3 nNormal;
out vec3 nPosition;//position our colors start
out vec3 posCamera;
void main()
{
	vec3 pos_light =vec3(1.0,1.0,1.0);
    vColor = aPosition;//base color of the geometry
    gl_Position = uProjMat * uViewMat * uModelMat * aPosition;//Without this we have black screen
	nPosition = aPosition.xyz;//initialize a varying
	//Start of lambert
	float dist = normalize(length(pos_light - nPosition));//distance between the light and sphere 
	float distSQ = dist * dist;
	float lightIntensity = 1.0;
	float attenuation = 1.0/((1.0 + dist) / lightIntensity
		      + distSQ/ (lightIntensity * lightIntensity));
	vColor += attenuation; //returns color(currently in object space)
	
}