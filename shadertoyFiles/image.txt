// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    // setup
    
    //texture space : [0 to 1)
    //if texture is 100x100px, resInv = 0.01 or the pixel size in our texture space
    // test UV for input image
    sDCoord uv = fragCoord / iChannelResolution[0].xy;//sets xy resolution of the texture we are looking at
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    fragColor = texture(iChannel0, uv);
    color4 tex1 = texture(iChannel0, uv);
    color4 tex2 = texture(iChannel1,uv);
//  fragColor = tex2;
//  fragColor = mix(tex2, tex1,0.5);//tex1 changes the shape of which the layers pile through and tex3 takes the upper section
//  fragColor = tex1 + tex2;//directly mashes the two textures together in shaping and coloration//ADD
//	fragColor = tex2 * tex1;//MULTIPLY
//  fragColor = 1.0- (1.0 - tex1) * (1.0-tex2);//SCREEN

}
