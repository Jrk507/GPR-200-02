// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)



//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    // setup
    
   // sScalar lum[25];
    //texture space : [0 to 1)
    //if texture is 100x100px, resInv = 0.01 or the pixel size in our texture space
    // test UV for input image
    // TESTING
    //if(fract(fragCoord.y) == 0.5);
     //fragColor = vec4(1.0);
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    /*
    for(i = 0; i < 25; i++)
    {
        vec2 tc = (2.0 * fragCoord.xy + 3.5 * vec2(i % 5-2, i /5-2));
        vec3 col = texture(iChannel0,uv).rgb;
        lum[i] = col.r*0.3 + col.g*0.59 + col.b*0.11;
        //lum[i] = dot(col, vec3(0.3, 0.59, 0.11));
    }
 	*/
   
    /*
    float kernelluminance = (
        (1.0 * (lum[0] + lum[4] +lum[20] + lum[24])) +
        (4.0 * (lum[1] + lum[3] + lum[5] + lum[9] +
         	lum[15] + lum[19] + lum[21] + lum[23])) +
        (7.0 * (lum[2] + lum[10] + lum[14] + lum[22])) +
        (16.0 * (lum[6] + lum[8] + lum[16] + lum[18])) +
        (26.0 * (lum[7] + lum[11] + lum[13] + lum[17])) +
        (41.0 * lum[12]))/273.0;
    */
    //float exposure = sqrt(8.0 / (kernelluminance + 0.25));
    sDCoord uv = fragCoord / iChannelResolution[0].xy;//sets xy resolution of the texture we are looking at
    color4 color = texture(iChannel0, uv);//sets uv coord of the screen and takes the color of iChannel0 texture
    sBasis col = texture(iChannel0,uv).rgb;//sets uv coord of the screen and takes the color of iChannel0 texture and only takes the rgb factors
    sScalar lum = col.r*0.3 + col.g*0.59 + col.b*0.11;//sets col rgb coords equal to the perfect white for eyes
    fragColor = lum*lum*lum*lum*color;//sets color multiplied by lumance to the fourth power
    // fragColor = color4(1.0 - exp2(-color.xyz * lum), 1.0);

}