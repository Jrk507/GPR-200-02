// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)


//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    vec2 uv = fragCoord / iChannelResolution[0].xy;
    vec2 fragCoordScale = vec2(1.0) / vec2(textureSize(iChannel0,0));
    color4 color = color4(0.0);
    vec2 scalar = uv+fragCoordScale;
    float blur = 10.0;
    /*
    color += texture(iChannel0,uv)*4.0;
    color += texture(iChannel0,scalar*vec2(-1,0.0) )*2.0;
    color += texture(iChannel0,scalar*vec2(1,0.0) )*2.0;
    color += texture(iChannel0,scalar*vec2(0.0,-1.0))*2.0;
    color += texture(iChannel0,scalar*vec2(0.0,1.0))*2.0;
    color += texture(iChannel0,scalar*vec2(1.0,1.0))*1.0;
    color += texture(iChannel0,scalar*vec2(-1.0,1.0))*1.0;
    color += texture(iChannel0,scalar*vec2(-1.0,1.0))*1.0;
    color += texture(iChannel0,scalar*vec2(-1.0,-1.0))*1.0;
    color /= 16.0;
   */
     color += texture(iChannel0,uv)*41.0;
    color += texture(iChannel0,scalar*vec2(-1,0.0) )*26.0;
    color += texture(iChannel0,scalar*vec2(1,0.0) )*26.0;
    color += texture(iChannel0,scalar*vec2(0.0,-1.0))*26.0;
    color += texture(iChannel0,scalar*vec2(0.0,1.0))*26.0;
    color += texture(iChannel0,scalar*vec2(1.0,1.0))*16.0;
    color += texture(iChannel0,scalar*vec2(-1.0,1.0))*16.0;
    color += texture(iChannel0,scalar*vec2(-1.0,1.0))*16.0;
    color += texture(iChannel0,scalar*vec2(-1.0,-1.0))*16.0;
    color += texture(iChannel0,scalar*vec2(-2,0.0) )*7.0;
    color += texture(iChannel0,scalar*vec2(2,0.0) )*7.0;
    color += texture(iChannel0,scalar*vec2(0.0,-2.0))*7.0;
    color += texture(iChannel0,scalar*vec2(0.0,2.0))*7.0;
    color += texture(iChannel0,scalar*vec2(-1.0,2.0))*4.0;
    color += texture(iChannel0,scalar*vec2(1.0,2.0))*4.0;
    color += texture(iChannel0,scalar*vec2(2.0,1.0))*4.0;
    color += texture(iChannel0,scalar*vec2(2.0,-1.0))*4.0;
    color += texture(iChannel0,scalar*vec2(-1.0,-2.0))*4.0;
    color += texture(iChannel0,scalar*vec2(1.0,-2.0))*4.0;
    color += texture(iChannel0,scalar*vec2(-2.0,1.0))*4.0;
    color += texture(iChannel0,scalar*vec2(-2.0,-1.0))*4.0;
    color += texture(iChannel0,scalar*vec2(2.0,2.0))*1.0;
    color += texture(iChannel0,scalar*vec2(-2.0,2.0))*1.0;
    color += texture(iChannel0,scalar*vec2(-2.0,2.0))*1.0;
    color += texture(iChannel0,scalar*vec2(-2.0,-2.0))*1.0;
    color /= 273.0;
    
    
    fragColor = color;
    //fragColor = texture(iChannel0,uv);
}


